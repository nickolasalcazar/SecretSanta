"""
Django settings for secretsanta project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os

# For hiding sensitive info on GitHub; senstive info enclosed in decouple_config()
from decouple import config as decouple_config, Csv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

#SECRET_KEY = decouple_config('SECRET_KEY')
SECRET_KEY = os.getenv('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = decouple_config('DEBUG', default=False, cast=bool)
DEBUG = os.getenv('DEBUG')

#ALLOWED_HOSTS = decouple_config('ALLOWED_HOSTS', cast=Csv())
#ALLOWED_HOSTS = ['0.0.0.0']                    # Heroku local
ALLOWED_HOSTS = [os.getenv('ALLOWED_HOSTS')]    # For Heroku


# Application definition
# Remember to always add new apps here
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Apps
    'game.apps.GameConfig',
    'users.apps.UsersConfig',

    # Third party
    'crispy_forms',
]

CRISPY_TEMPLATE_PACK = 'bootstrap4'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'secretsanta.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'secretsanta.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases
DATABASES = {
    'default': {
        # Default database
        #'ENGINE': 'django.db.backends.sqlite3'
        #'NAME': BASE_DIR / 'db.sqlite3',

        # PostgreSQL database
        'ENGINE': 'django.db.backends.postgresql',
        # 'NAME': decouple_config('POSTGRESQL_NAME'),
        # 'USER': decouple_config('POSTGRESQL_USER'),
        # 'PASSWORD': decouple_config('POSTGRESQL_PASSWORD'),
        # 'HOST': decouple_config('POSTGRESQL_HOST'),
        # 'PORT': decouple_config('POSTGRESQL_PORT', cast=int)

        'NAME': os.getenv('POSTGRESQL_NAME'),
        'USER': os.getenv('POSTGRESQL_USER'),
        'PASSWORD': os.getenv('POSTGRESQL_PASSWORD'),
        'HOST': os.getenv('POSTGRESQL_HOST'),
        'PORT': os.getenv('POSTGRESQL_PORT')
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

# Email Settings ###################################################
EMAIL_USE_TLS = True
# EMAIL_HOST = decouple_config('EMAIL_HOST')
# EMAIL_PORT = decouple_config('EMAIL_PORT', cast=int)
# EMAIL_HOST_USER = decouple_config('EMAIL_HOST_USER')
# EMAIL_HOST_PASSWORD = decouple_config('EMAIL_HOST_PASSWORD')

EMAIL_HOST = os.getenv('EMAIL_HOST')
EMAIL_PORT = os.getenv('EMAIL_PORT')
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
####################################################################

LOGIN_REDIRECT_URL = 'game-home'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

# Google reCAPTCHA v2 Settings
GOOGLE_RECAPTCHA_SECRET_KEY = os.getenv('GOOGLE_RECAPTCHA_SECRET_KEY')

print("GOOGLE_RECAPTCHA_SECRET_KEY = ", GOOGLE_RECAPTCHA_SECRET_KEY)
